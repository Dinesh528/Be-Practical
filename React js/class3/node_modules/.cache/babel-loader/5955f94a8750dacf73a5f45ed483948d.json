{"ast":null,"code":"var _jsxFileName = \"D:\\\\Be Practical\\\\React js\\\\class3\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popular: false\n    };\n    this.updateLikes = this.updateLikes.bind(this);\n  }\n\n  updateLikes() {\n    ReactDOM.render(React.createElement(Counter, {\n      likes: this.props.likes + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), document.getElementById('renderHere'));\n  } //1.(Mounting)\n\n\n  componentWillMount() {\n    console.log('component has started mounting');\n  } //2.mounting\n\n\n  componentDidMount() {\n    console.log('Component has mounted');\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    console.log(\"Component will recieve props called\");\n    console.log(\"Should component update nextProps = \", nextProps);\n    this.setState({\n      popular: nextProps.likes >= 10\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"Component should update or not?\");\n    console.log(\"should component update nextProps=\", nextProps);\n    console.log(\"should component update nextState=\", nextState);\n    return true;\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    console.log(\"component will update is called ..\");\n    console.log(\"Component will update nextProps=\", nextProps);\n    console.log(\"component will update nextState=\", +nextState);\n  }\n\n  render() {\n    console.log('Component has rendered');\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-title text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Counter\")), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.popular ? 'I am Popular' : null), React.createElement(\"button\", {\n      onClick: this.updateLikes,\n      className: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Likes=\", this.props.likes))))));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"Component did update is called\");\n    console.log(\"Component did updated prevProps=\", prevProps);\n    console.log(\"Component did updated prevState=\", prevState);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Component is successfully un mounted..\");\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/Be Practical/React js/class3/src/components/Counter.js"],"names":["React","Component","ReactDOM","Counter","constructor","props","state","popular","updateLikes","bind","render","likes","document","getElementById","componentWillMount","console","log","componentDidMount","componentWillReceiveProps","nextProps","nextContext","setState","shouldComponentUpdate","nextState","componentWillUpdate","componentDidUpdate","prevProps","prevState","componentWillUnmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Counter extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = { popular: false};\r\n\r\n        this.updateLikes = this.updateLikes.bind(this);\r\n    }\r\n\r\n    updateLikes(){\r\n        ReactDOM.render(\r\n            <Counter likes={this.props.likes + 1}/>,\r\n            document.getElementById('renderHere')\r\n        );\r\n    }\r\n\r\n    //1.(Mounting)\r\n    componentWillMount(){\r\n        console.log('component has started mounting');\r\n    }\r\n\r\n    //2.mounting\r\n    componentDidMount(){\r\n        console.log('Component has mounted');\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps,nextContext){\r\n        console.log(\"Component will recieve props called\");\r\n        console.log(\"Should component update nextProps = \",nextProps);\r\n        this.setState({\r\n            popular: nextProps.likes >=10\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        console.log(\"Component should update or not?\");\r\n        console.log(\"should component update nextProps=\", nextProps);\r\n        console.log(\"should component update nextState=\", nextState);\r\n        return true;\r\n    }\r\n\r\n    componentWillUpdate(nextProps,nextState,nextContext){\r\n        console.log(\"component will update is called ..\");\r\n        console.log(\"Component will update nextProps=\", nextProps);\r\n        console.log(\"component will update nextState=\", + nextState);\r\n    }\r\n\r\n    render(){\r\n        console.log('Component has rendered');\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div>\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"panel-heading\">\r\n                            <div className=\"panel-title text-center\">Counter</div>\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                            <h3>{this.state.popular? 'I am Popular' : null}</h3>\r\n                                <button onClick={this.updateLikes} className=\"btn btn-info\">\r\n                                    Likes={this.props.likes}\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState){\r\n        console.log(\"Component did update is called\");\r\n        console.log(\"Component did updated prevProps=\", prevProps);\r\n        console.log(\"Component did updated prevState=\",prevState);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log(\"Component is successfully un mounted..\");\r\n    }\r\n}\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}